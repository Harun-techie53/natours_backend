generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

enum Difficulty {
  EASY
  MEDIUM
  DIFFICULT
}

model User {
  id         String   @id @unique @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  username   String
  email      String   @unique
  password   String
  is_active  Boolean  @default(true)

  user_roles User_Role[]

  @@map("users")
}

model Role {
  id          String      @id @unique @default(uuid())
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  name        String
  description String?
  user_roles  User_Role[]

  @@map("roles")
}

model User_Role {
  user_id String
  role_id String
  role    Role   @relation(fields: [role_id], references: [id], onDelete: Cascade)
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([user_id, role_id])
  @@index([user_id, role_id])
  @@index([role_id], map: "user_roles_role_id_fkey")
  @@map("user_roles")
}

model Tour {
  id           String     @id @unique @default(uuid())
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  name         String
  duration     Int
  maxGroupSize Int
  difficulty   Difficulty
  price        Int
  image_cover  String?
  start_date   String

  tour_locations Tour_Locations[]

  @@map("tours")
}

model Location {
  id         String   @id @unique @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  latitude   Float
  longitude  Float
  address    String?
  city       String?
  country    String?

  tour_locations Tour_Locations[]

  @@map("locations")
}

model Tour_Locations {
  tour_id     String
  location_id String
  tour        Tour     @relation(fields: [tour_id], references: [id], onDelete: Cascade)
  location    Location @relation(fields: [location_id], references: [id], onDelete: Cascade)

  @@id([tour_id, location_id])
  @@index([tour_id, location_id])
  @@index([location_id], map: "tour_locations_location_id_fkey")
  @@map("tour_locations")
}
